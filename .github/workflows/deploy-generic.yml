name: deploy-generic

on:
  workflow_call:
    inputs:
      username:
        required: true
        type: string
    secrets:
      token:
        required: true

  workflow_dispatch:

jobs:
  build:
    runs-on: [ self-hosted ]
    #runs-on: ubuntu-lates
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main


    #- name: Read service name and version
    #  run: |
    #    CLIENT_NAME=$(cat ${{ env.PRODUCTO_SERVICIO }}/CLIENT_NAME)
    #    PRODUCT_NAME=$(cat ${{ env.PRODUCTO_SERVICIO }}/PRODUCT_NAME)
    #    SERVICE_NAME=$(cat ${{ env.PRODUCTO_SERVICIO }}/SERVICE_NAME)
    #    VERSION=$(cat ${{ env.PRODUCTO_SERVICIO }}/VERSION)
    #    TAG_IMAGEN=$(cat ${{ env.PRODUCTO_SERVICIO }}/DOCKER_TAG)
    #    echo "CLIENT_NAME=$CLIENT_NAME" >> $GITHUB_ENV
    #    echo "PRODUCT_NAME=$PRODUCT_NAME" >> $GITHUB_ENV
    #    echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
    #    echo "VERSION=$VERSION" >> $GITHUB_ENV
    #    echo "TAG_IMAGEN=$TAG_IMAGEN" >> $GITHUB_ENV
    #  # BACKUP_VELERO:     # Tipos:  YAML: solo yaml - SNAPSHOP: solo snapshop - ALL: yaml y snapsh
    #
    ##- name: Cambiamos TAGS de la IMAGEN
    ##  run: |
    ##    cd  ${{ github.workspace }}/deploy/${{ env.CLIENT_NAME }}/${{ env.PRODUCT_NAME }}/${{ env.SERVICE_NAME }}/${{ env.ENTORNO }}
    ##    sed -i "s|TAG_IMAGEN|${{ env.TAG_IMAGEN }}|g" service-deployment.yaml
    #
    ##
    ##  PARA QUE FUNCIONE HAYQ UE LANZAR:
    ##
    ##   /admops/devops/githup/products/repositorios-desarrollo/actions-runner-app_des_3/RUN.SH  CON "admops"
    ##
    #- name: Run Deploy script
    #  run: |
    #    FECHA=`date "+%Y-%m-%d %H:%M:%S"`
    #    echo "   ------------------------------------------------------------------" >> /opt/devops/githup/scripts/logs/ENTORNO_DE_DESPLIEGUE_${{ env.ENTORNO }}.logs
    #    echo $FECHA >> /opt/devops/githup/scripts/logs/ENTORNO_DE_DESPLIEGUE_${{ env.ENTORNO }}.logs
    #    echo DESPLIEGUE ${{ env.ENTORNO }} : $GITHUB_REPOSITORY : ${{ env.PRODUCT_NAME }} : ${{ env.SERVICE_NAME }} >> /opt/devops/githup/scripts/logs/ENTORNO_DE_DESPLIEGUE_${{ env.ENTORNO }}.logs
    #    echo En controller ENTORNO: $GITHUB_REPOSITORY - ${{ env.ENTORNO }} - ${{ github.event_name }} -  ${{ github.workspace }} - ${{ github.actions.path }} - $RUNNER_NAME
    #    echo "/opt/devops/githup/scripts/SendDeploy.sh \"Deploy.sh\" \"${{ github.workspace }}/deploy/${{ env.CLIENT_NAME }}/${{ env.PRODUCT_NAME }}/${{ env.SERVICE_NAME }}/${{ env.ENTORNO }}\" \"${{ env.CLIENT_NAME }}\" \"${{ env.PRODUCT_NAME }}\" \"${{ env.SERVICE_NAME }}\" \"${{ env.ENTORNO }}\" \"$GITHUB_REPOSITORY\" \"$RUNNER_NAME\"" >> /opt/devops/githup/scripts/logs/ENTORNO_DE_DESPLIEGUE_${{ env.ENTORNO }}.logs
    #    echo " RUNNER: $RUNNER_NAME " >> /opt/devops/githup/scripts/logs/ENTORNO_DE_DESPLIEGUE_${{ env.ENTORNO }}.logs
    #    #### /opt/devops/githup/scripts/SendDeploy.sh "Deploy.sh" "${{ github.workspace }}/deploy/${{ env.CLIENT_NAME }}/${{ env.PRODUCT_NAME }}/${{ env.SERVICE_NAME }}/${{ env.ENTORNO }}/" "${{ env.CLIENT_NAME }}" "${{ env.PRODUCT_NAME }}" "${{ env.SERVICE_NAME }}" "${{ env.ENTORNO }}" "$GITHUB_REPOSITORY" "$RUNNER_NAME"
    #- name: Run a one-line script
    #  run: echo End Deploy !
